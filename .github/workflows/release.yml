name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 2.0.3)'
        required: true
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build package
      run: npm run build
    
    - name: Generate changelog
      id: changelog
      uses: TriPSs/conventional-changelog-action@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        skip-version-file: true
        skip-commit: true
        output-file: false
    
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/**/*"
        body: |
          ## ðŸš€ Release Notes
          
          ${{ steps.changelog.outputs.clean_changelog }}
          
          ## ðŸ“¦ Installation
          
          ```bash
          npm install mcp-atlassian@${{ github.ref_name }}
          ```
          
          ## ðŸ”— Links
          
          - [npm Package](https://www.npmjs.com/package/mcp-atlassian/v/${{ github.ref_name }})
          - [Documentation](https://github.com/${{ github.repository }}/blob/main/README.md)
          - [Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        prerelease: ${{ github.event.inputs.prerelease || false }}
        generateReleaseNotes: true
    
    - name: Update Changelog
      if: steps.changelog.outputs.skipped == 'false'
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add CHANGELOG.md
        git commit -m "docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]"
        git push origin HEAD:main