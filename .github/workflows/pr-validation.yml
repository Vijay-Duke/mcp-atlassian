name: PR Validation

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  validate-pr:
    name: Validate Pull Request
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Validate PR Title
      uses: amannn/action-semantic-pull-request@v6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          build
          ci
          chore
          revert
        requireScope: false
        subjectPattern: ^[A-Z].+$
        subjectPatternError: |
          The subject "{subject}" found in the pull request title "{title}"
          doesn't match the configured pattern. Please ensure that the subject
          starts with an uppercase letter.
    
    - name: Check PR Size
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const { additions, deletions, changed_files } = pr;
          
          let label = 'size/XS';
          let comment = '';
          
          if (additions + deletions < 10) {
            label = 'size/XS';
          } else if (additions + deletions < 100) {
            label = 'size/S';
          } else if (additions + deletions < 500) {
            label = 'size/M';
          } else if (additions + deletions < 1000) {
            label = 'size/L';
          } else {
            label = 'size/XL';
            comment = '⚠️ This PR is quite large. Consider breaking it into smaller, more focused PRs.';
          }
          
          // Add size label
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr.number,
            labels: [label]
          });
          
          // Add comment if PR is too large
          if (comment) {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: comment
            });
          }
    
    - name: Auto-label PR
      uses: actions/labeler@v6
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        configuration-path: .github/labeler.yml