name: Publish to npm and GitHub Packages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 2.1.0)'
        required: true
        type: string
      target:
        description: 'Publishing target'
        required: true
        type: choice
        options:
          - both
          - npm-only
          - github-only
        default: both

permissions:
  contents: read
  packages: write
  id-token: write  # For npm provenance

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js for npm
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm test

      # Publish to npm Registry
      - name: Publish to npm
        if: github.event.inputs.target != 'github-only'
        run: |
          npm version ${{ github.event.inputs.version || github.event.release.tag_name }} --no-git-tag-version --allow-same-version
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Setup for GitHub Packages
      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@Vijay-Duke'

      # Publish to GitHub Packages
      - name: Publish to GitHub Packages
        if: github.event.inputs.target != 'npm-only'
        run: |
          # Backup original package.json
          cp package.json package.json.backup
          
          # Modify package name for GitHub Packages
          VERSION="${{ github.event.inputs.version || github.event.release.tag_name }}"
          VERSION="${VERSION#v}"  # Remove 'v' prefix if present
          
          node -e "
          const fs = require('fs');
          const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
          pkg.name = '@vijay-duke/mcp-atlassian';
          pkg.version = '$VERSION';
          pkg.publishConfig = {
            registry: 'https://npm.pkg.github.com',
            access: 'public'
          };
          fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
          
          npm publish
          
          # Restore original package.json
          mv package.json.backup package.json
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create summary
        run: |
          VERSION="${{ github.event.inputs.version || github.event.release.tag_name }}"
          VERSION="${VERSION#v}"
          
          echo "## 🚀 Package Published Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ github.event.inputs.target }}" != "github-only" ]]; then
            echo "### 📦 npm Registry" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Package: [mcp-atlassian@$VERSION](https://www.npmjs.com/package/mcp-atlassian/v/$VERSION)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo "npm install mcp-atlassian@$VERSION" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ github.event.inputs.target }}" != "npm-only" ]]; then
            echo "### 🐙 GitHub Packages" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Package: [@vijay-duke/mcp-atlassian@$VERSION](https://github.com/Vijay-Duke/mcp-atlassian/packages)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo "npm install @vijay-duke/mcp-atlassian@$VERSION" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Note:** You may need to configure authentication for GitHub Packages:" >> $GITHUB_STEP_SUMMARY
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo "npm config set @vijay-duke:registry https://npm.pkg.github.com" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi